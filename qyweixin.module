<?php
/**
 * Implements hook_ENTITY_TYPE_insert for user entity type.
 */
function qyweixin_user_insert(\Drupal\user\UserInterface $user) {
	if(!\Drupal::config('qyweixin.general')->get('autosync')) return;
	try {
		$access_token=\Drupal::state()->get('qyweixin.access_token');
		if(empty($access_token)) throw new Exception('access_token of qyweixin is empty.');
		$url=sprintf('https://qyapi.weixin.qq.com/cgi-bin/user/create?access_token=%s', $access_token);
		$u=new stdClass();
		$u->userid=$user->id();
		$u->name=$user->getDisplayName();
		$u->email=$user->getEmail();
		$u->department=[1];
		$data = (string) \Drupal::httpClient()->post($url, ['body'=>json_encode($u, JSON_UNESCAPED_UNICODE)])->getBody();
		$response=json_decode($data);
		if($response->errcode) throw new Exception($response->errmsg);
		\Drupal::logger('qyweixin')->info('Information of !user has been added into qyweixin.',
			array('!user'=>$user->getDisplayName())
		);
	} catch (\Exception $e) {
		\Drupal::logger('qyweixin')->error('Syncing information of !user into qyweixin failed: !errmsg.',
			array('!user'=>$user->getDisplayName(), '!errmsg'=>$e->getMessage())
		);
	}
}

/**
 * Implements hook_ENTITY_TYPE_update for user entity type.
 */
function qyweixin_user_update(\Drupal\user\UserInterface $user) {
	if(!\Drupal::config('qyweixin.general')->get('autosync')) return;
	try {
		$access_token=\Drupal::state()->get('qyweixin.access_token');
		if(empty($access_token)) throw new Exception('access_token of qyweixin is empty.');
		$url=sprintf('https://qyapi.weixin.qq.com/cgi-bin/user/update?access_token=%s', $access_token);
		$u=new stdClass();
		$u->userid=$user->id();
		$u->name=$user->getDisplayName();
		$u->email=$user->getEmail();
		$u->department=[1];
		$u->enable=$user->isActive();
		$data = (string) \Drupal::httpClient()->post($url, ['body'=>json_encode($u, JSON_UNESCAPED_UNICODE)])->getBody();
		$response=json_decode($data);
		if($response->errcode) throw new Exception($response->errmsg);
		\Drupal::logger('qyweixin')->info('Information of !user has been updated into qyweixin.',
			array('!user'=>$user->getDisplayName())
		);
	} catch (\Exception $e) {
		\Drupal::logger('qyweixin')->error('Syncing information of !user into qyweixin failed: !errmsg.',
			array('!user'=>$user->getDisplayName(), '!errmsg'=>$e->getMessage())
		);
	}
}

/**
 * Implements hook_ENTITY_TYPE_predelete for user entity type.
 */
function qyweixin_user_predelete(\Drupal\user\UserInterface $user) {
	if(!\Drupal::config('qyweixin.general')->get('autosync')) return;
	try {
		$access_token=\Drupal::state()->get('qyweixin.access_token');
		if(empty($access_token)) throw new Exception('access_token of qyweixin is empty.');
		$url=sprintf('https://qyapi.weixin.qq.com/cgi-bin/user/delete?access_token=%s&userid=%s', $access_token, $user->id());
		$data = (string) \Drupal::httpClient()->get($url)->getBody();
		$response=json_decode($data);
		if($response->errcode) throw new Exception($response->errmsg);
		\Drupal::logger('qyweixin')->info('Information of !user has been deleted from qyweixin.',
			array('!user'=>$user->getDisplayName())
		);
	} catch (\Exception $e) {
		\Drupal::logger('qyweixin')->error('Syncing information of !user into qyweixin failed: !errmsg.',
			array('!user'=>$user->getDisplayName(), '!errmsg'=>$e->getMessage())
		);
	}
}

/**
 * Implements hook_ENTITY_TYPE_presave for user_role entity type.
 */
function qyweixin_user_role_presave(\Drupal\user\RoleInterface $role) {
	if(!\Drupal::config('qyweixin.general')->get('autosync')) return;
	$departmentid=$role->getThirdPartySetting('qyweixin','departmentid');
	if(empty($departmentid)) {
		$max_department_id=\Drupal::state()->get('qyweixin.max_department_id')+1;
		$role->setThirdPartySetting('qyweixin','departmentid',(string)$max_department_id);
		\Drupal::state()->set('qyweixin.max_department_id', $max_department_id);
	}
}

/**
 * Implements hook_ENTITY_TYPE_insert for user_role entity type.
 */
function qyweixin_user_role_insert(\Drupal\user\RoleInterface $role) {
	if(!\Drupal::config('qyweixin.general')->get('autosync')) return;
	try {
		$access_token=\Drupal::state()->get('qyweixin.access_token');
		if(empty($access_token)) throw new Exception('access_token of qyweixin is empty.');
		$url=sprintf('https://qyapi.weixin.qq.com/cgi-bin/department/create?access_token=%s', $access_token);
		$r=new stdClass();
		$r->id=(int)$role->getThirdPartySetting('qyweixin','departmentid');
		$r->name=$role->label();
		$r->order=$role->getWeight();
		$r->parentid='1';
		$data = (string) \Drupal::httpClient()->post($url, ['body'=>json_encode($r, JSON_UNESCAPED_UNICODE)])->getBody();
		$response=json_decode($data);
		if($response->errcode) throw new Exception($response->errmsg);
		\Drupal::logger('qyweixin')->info('Information of !role has been added into qyweixin.',
			array('!role'=>$role->label())
		);
	} catch (\Exception $e) {
		\Drupal::logger('qyweixin')->error('Syncing information of !role into qyweixin failed: !errmsg.',
			array('!role'=>$role->label(), '!errmsg'=>$e->getMessage())
		);
	}
}

/**
 * Implements hook_ENTITY_TYPE_update for user_role entity type.
 */
function qyweixin_user_role_update(\Drupal\user\RoleInterface $role) {
	if(!\Drupal::config('qyweixin.general')->get('autosync')) return;
	try {
		$access_token=\Drupal::state()->get('qyweixin.access_token');
		if(empty($access_token)) throw new Exception('access_token of qyweixin is empty.');
		$url=sprintf('https://qyapi.weixin.qq.com/cgi-bin/department/update?access_token=%s', $access_token);
		$r=new stdClass();
		$r->id=$role->getThirdPartySetting('qyweixin','departmentid');
		$r->name=$role->label();
		$r->order=$role->getWeight();
		$r->parentid='1';
		$data = (string) \Drupal::httpClient()->post($url, ['body'=>json_encode($r, JSON_UNESCAPED_UNICODE)])->getBody();
		$response=json_decode($data);
		if($response->errcode) throw new Exception($response->errmsg);
		\Drupal::logger('qyweixin')->info('Information of !role has been updated into qyweixin.',
			array('!role'=>$role->label())
		);
	} catch (\Exception $e) {
		\Drupal::logger('qyweixin')->error('Syncing information of !role into qyweixin failed: !errmsg.',
			array('!role'=>$role->label(), '!errmsg'=>$e->getMessage())
		);
	}
}

/**
 * Implements hook_ENTITY_TYPE_predelete for user_role entity type.
 */
function qyweixin_user_role_predelete(\Drupal\user\RoleInterface $role) {
	if(!\Drupal::config('qyweixin.general')->get('autosync')) return;
	drupal_set_message($role->getThirdPartySetting('qyweixin','departmentid','NULL'));
	try {
		$access_token=\Drupal::state()->get('qyweixin.access_token');
		if(empty($access_token)) throw new Exception('access_token of qyweixin is empty.');
		$url=sprintf('https://qyapi.weixin.qq.com/cgi-bin/department/delete?access_token=%s&id=%s', $access_token, $role->getThirdPartySetting('qyweixin','departmentid'));
		$data = (string) \Drupal::httpClient()->get($url)->getBody();
		$response=json_decode($data);
		if($response->errcode) throw new Exception($response->errmsg);
		\Drupal::logger('qyweixin')->info('Information of !role has been deleted from qyweixin.',
			array('!role'=>$role->label())
		);
		$role->unsetThirdPartySetting('qyweixin','departmentid');
	} catch (\Exception $e) {
		\Drupal::logger('qyweixin')->error('Syncing information of !role into qyweixin failed: !errmsg.',
			array('!role'=>$role->label(), '!errmsg'=>$e->getMessage())
		);
	}
}


?>
